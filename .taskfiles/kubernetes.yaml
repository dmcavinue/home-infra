---
version: "3"

tasks:

  mount:
    desc: Mount a PersistentVolumeClaim to a pod temporarily
    interactive: true
    vars:
      claim: '{{ or .claim (fail "PersistentVolumeClaim `claim` is required") }}'
      namespace: '{{.namespace | default "default"}}'
    cmd: |
      kubectl --context {{.ENVIRONMENT}} run -n {{.namespace}} debug-{{.claim}} -i --tty --rm --image=null --privileged --overrides='
        {
          "apiVersion": "v1",
          "spec": {
            "containers": [
              {
                "name": "debug",
                "image": "alpine:3",
                "command": [
                  "/bin/cat"
                ],
                "stdin": true,
                "stdinOnce": true,
                "tty": true,
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/data/config"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "config",
                "persistentVolumeClaim": {
                  "claimName": "{{.claim}}"
                }
              }
            ],
            "restartPolicy": "Never"
          }
        }'
    preconditions:
      - kubectl --context {{.ENVIRONMENT}} -n {{.namespace}} get pvc {{.claim}}

  install-crds:
    desc: Add required initial CRDs
    cmds:
      - "kubectl --context {{.ENVIRONMENT}} apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.66.0/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml"
      - "kubectl --context {{.ENVIRONMENT}} apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.66.0/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml"
      - "kubectl --context {{.ENVIRONMENT}} apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.66.0/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml"
      - "kubectl --context {{.ENVIRONMENT}} apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v0.8.1/config/crd/experimental/gateway.networking.k8s.io_gatewayclasses.yaml"
      - "kubectl --context {{.ENVIRONMENT}} apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v0.8.1/config/crd/experimental/gateway.networking.k8s.io_gateways.yaml"
      - "kubectl --context {{.ENVIRONMENT}} apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v0.8.1/config/crd/experimental/gateway.networking.k8s.io_httproutes.yaml"
      - "kubectl --context {{.ENVIRONMENT}} apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v0.8.1/config/crd/experimental/gateway.networking.k8s.io_referencegrants.yaml"
      - "kubectl --context {{.ENVIRONMENT}} apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v0.8.1/config/crd/experimental/gateway.networking.k8s.io_grpcroutes.yaml"
      - "kubectl --context {{.ENVIRONMENT}} apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v0.8.1/config/crd/experimental/gateway.networking.k8s.io_tlsroutes.yaml"
      - "kubectl --context {{.ENVIRONMENT}} apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v0.8.1/config/crd/experimental/gateway.networking.k8s.io_tcproutes.yaml"
      - "kubectl --context {{.ENVIRONMENT}} apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v0.8.1/config/crd/experimental/gateway.networking.k8s.io_udproutes.yaml"
      - "kubectl --context {{.ENVIRONMENT}} apply -f https://raw.githubusercontent.com/external-secrets/kubernetes-external-secrets/master/charts/kubernetes-external-secrets/crds/kubernetes-client.io_externalsecrets_crd.yaml"

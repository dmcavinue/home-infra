---
version: '3'

env:
  VAULT_ADDR: "https://vault.{{.LOCAL_DOMAIN}}"
  #VAULT_TOKEN: 
    #sh: if [ -f {{.ROOT_DIR}}/.vault.json ]; then cat {{.ROOT_DIR}}/.vault.json | jq -r '.root_token'; fi

tasks:
  init:
    desc: initialize vault
    cmds:
      - kubectl -n vault exec -ti vault-0 -- vault operator init -n 1 -t 1 --format=json > {{.ROOT_DIR}}/.vault.json
      
  bootstrap:
    desc: bootstrap auth/roles
    cmds:
      - task vault:disable-k8s-auth
      - task vault:enable-k8s-auth
      - task vault:add-roles
      - task vault:add-kv-secrets
  status:
    desc: vault status
    cmds:
      - vault status
  unseal:
    desc: vault unseal
    cmds:
      - kubectl -n vault exec -ti vault-0 -- vault operator unseal $( cat {{.ROOT_DIR}}/.vault.json | jq -r '.unseal_keys_b64[0]')
  # ldap
  enable-ldap:
    desc: configure vault ldap auth
    cmds:
      - vault auth disable ldap
      - vault auth enable ldap
      - vault write auth/ldap/config
          url="ldaps://{{.LDAP_SERVER}}"
          userattr=uid
          userdn="cn=users,{{.LDAP_ROOT}}"
          discoverdn=true
          groupdn="cn=groups,{{.LDAP_ROOT}}"
          groupfilter='(&(objectClass=posixGroup)(memberUid={{printf "{{.Username}}"}}))'
          groupattr="uid"
          binddn="uid={{.LDAP_ADMIN_USERNAME}},cn=users,{{.LDAP_ROOT}}"
          bindpass="{{.LDAP_ADMIN_PASSWORD}}"
          insecure_tls=false
          starttls=true
      - vault write auth/ldap/groups/vault-admin policies=admin
      - vault policy write admin {{.ROOT_DIR}}/tmpl/vault-admin.hcl
  # k8s auth
  enable-k8s-auth:
    desc: configure vault k8s auth for cluster
    cmds:
      - vault auth enable -path=kubernetes/{{.ENVIRONMENT}} kubernetes
      - kubectl -n kube-system apply -f {{.ROOT_DIR}}/kubernetes/templates/vault-auth.yaml
      - kubectl -n kube-system get secret vault-auth-token -o jsonpath="{.data['ca\.crt']}" | base64 -d > ca.crt
      - vault write auth/kubernetes/{{.ENVIRONMENT}}/config
          token_reviewer_jwt="$(kubectl -n kube-system get secret vault-auth-token -o jsonpath=\"{.data.token}\" | base64 -d; echo)"
          kubernetes_host="https://{{.VIP_IP}}"
          kubernetes_ca_cert=@ca.crt
          disable_iss_validation=true
      - rm ca.crt
  disable-k8s-auth:
    desc: disable k8s auth
    cmds:
      - vault auth disable kubernetes/{{.ENVIRONMENT}}
  add-roles:
    desc: add k8s roles/policies
    cmds:
      - echo "path \"secret/{{.ENVIRONMENT}}/data/cluster\" { capabilities = [\"read\", \"list\"] }" | vault policy write cluster-secrets -
      - echo "path \"secret/{{.ENVIRONMENT}}/data/flux-system/*\" { capabilities = [\"read\", \"list\"] }" | vault policy write flux-system -
      - vault write auth/kubernetes/{{.ENVIRONMENT}}/role/flux-system
          bound_service_account_names=vault-auth
          bound_service_account_namespaces=flux-system
          policies=cluster-secrets,flux-system,default
          ttl=1440h
      - echo "path \"secret/{{.ENVIRONMENT}}/data/database/*\" { capabilities = [\"read\", \"list\"] } " | vault policy write database -
      - vault write auth/kubernetes/{{.ENVIRONMENT}}/role/database
          bound_service_account_names=vault-auth
          bound_service_account_namespaces=database
          policies=database,media,home-automation,default
          ttl=1440h
      - echo "path \"secret/{{.ENVIRONMENT}}/data/home-automation/*\" { capabilities = [\"read\", \"list\"] }" | vault policy write home-automation -
      - vault write auth/kubernetes/{{.ENVIRONMENT}}/role/home-automation
          bound_service_account_names=vault-auth
          bound_service_account_namespaces=home-automation
          policies=volsync,database,home-automation,default
          ttl=1440h
      - echo "path \"secret/{{.ENVIRONMENT}}/data/media/*\" { capabilities = [\"read\", \"list\"] }" | vault policy write media -
      - vault write auth/kubernetes/{{.ENVIRONMENT}}/role/media
          bound_service_account_names=vault-auth
          bound_service_account_namespaces=media
          policies=media,default
          ttl=1440h
      - echo "path \"secret/{{.ENVIRONMENT}}/data/monitoring/*\" { capabilities = [\"read\", \"list\"] }" | vault policy write monitoring -
      - vault write auth/kubernetes/{{.ENVIRONMENT}}/role/monitoring
          bound_service_account_names=vault-auth
          bound_service_account_namespaces=monitoring
          policies=monitoring,default
          ttl=1440h
      - echo "path \"secret/{{.ENVIRONMENT}}/data/cert-manager/*\" { capabilities = [\"read\", \"list\"] }" | vault policy write cert-manager -
      - vault write auth/kubernetes/{{.ENVIRONMENT}}/role/cert-manager
          bound_service_account_names=vault-auth
          bound_service_account_namespaces=cert-manager
          policies=cert-manager,default
          ttl=1440h
      - echo "path \"secret/{{.ENVIRONMENT}}/data/kube-system/*\" { capabilities = [\"read\", \"list\"] }" | vault policy write kube-system -
      - vault write auth/kubernetes/{{.ENVIRONMENT}}/role/kube-system
          bound_service_account_names=vault-auth
          bound_service_account_namespaces=kube-system
          policies=kube-system,default
          ttl=1440h
      - echo "path \"secret/{{.ENVIRONMENT}}/data/ingress/*\" { capabilities = [\"read\", \"list\"] }" | vault policy write ingress -
      - vault write auth/kubernetes/{{.ENVIRONMENT}}/role/ingress
          bound_service_account_names=vault-auth
          bound_service_account_namespaces=ingress
          policies=ingress,default
          ttl=1440h
      - echo "path \"secret/{{.ENVIRONMENT}}/data/volsync/*\" { capabilities = [\"read\", \"list\"] }" | vault policy write volsync -
      - vault write auth/kubernetes/{{.ENVIRONMENT}}/role/volsync
          bound_service_account_names=vault-auth
          bound_service_account_namespaces=volsync
          policies=volsync,default
          ttl=1440h
      - echo "path \"secret/{{.ENVIRONMENT}}/data/security/*\" { capabilities = [\"read\", \"list\"] }" | vault policy write security -
      - vault write auth/kubernetes/{{.ENVIRONMENT}}/role/security
          bound_service_account_names=vault-auth
          bound_service_account_namespaces=security
          policies=security,default
          ttl=1440h
  # kv
  disable-kv:
    desc: disable kv secrets engine
    cmds:
      - vault secrets disable secret/{{.ENVIRONMENT}}
  enable-kv:
    desc: enable kv secrets engine
    cmds:
      - vault secrets enable -path=secret/{{.ENVIRONMENT}} kv-v2
  add-kv-secrets:
    desc: add kv secrets
    cmds:
      # shared secrets
      - vault kv put -mount=secret/{{.ENVIRONMENT}} cluster
          CILIUM_ID="{{.CILIUM_ID}}"
          CILIUM_LB_IP="{{.CILIUM_LB_IP}}"
          CLOUDFLARE_EMAIL="{{.CLOUDFLARE_EMAIL}}"
          DOMAIN="{{.DOMAIN}}"
          DOCKER_PRIVATE_REGISTRY="{{.DOCKER_PRIVATE_REGISTRY}}"
          ENVIRONMENT="{{.ENVIRONMENT}}"
          EMQX_LB_IP="{{.EMQX_LB_IP}}"
          SLACK_WEBHOOK="{{.SLACK_WEBHOOK}}"
          IPAM_CIDR="{{.IPAM_CIDR}}"
          LOCAL_DOMAIN="{{.LOCAL_DOMAIN}}"
          NGINX_LB_IP="{{.NGINX_LB_IP}}"
          NFS_SERVER_IP="{{.NFS_SERVER_IP}}"
          SERVER_CIDR="{{.SERVER_CIDR}}"
          VIP_IP="{{.VIP_IP}}"
          VIP_PORT="{{.VIP_PORT}}"
      # cert-manager
      - vault kv put -mount=secret/{{.ENVIRONMENT}} cert-manager/cloudflare          
          CLOUDFLARE_TOKEN="{{.CLOUDFLARE_TOKEN}}"
      # dex
      - vault kv put -mount=secret/{{.ENVIRONMENT}} security/dex
          DEX_OAUTH2_CLIENT_SECRET="{{.DEX_OAUTH2_CLIENT_SECRET}}"
          DEX_OAUTH2_COOKIE_SECRET="{{.DEX_OAUTH2_COOKIE_SECRET}}"
          DEX_LLDAP_USER="{{.DEX_LLDAP_USER}}"
          DEX_LLDAP_PASSWORD="{{.DEX_LLDAP_PASSWORD}}"
      # flux-system/notification
      - vault kv put -mount=secret/{{.ENVIRONMENT}} flux-system/notification
          FLUX_SLACK_WEBHOOK="{{.SLACK_WEBHOOK}}"
      # flux-system/weave-gitops
      - vault kv put -mount=secret/{{.ENVIRONMENT}} flux-system/weave-gitops
          ADMIN_PASSWORD="{{.ADMIN_PASSWORD}}"
      # database/emqx
      - vault kv put -mount=secret/{{.ENVIRONMENT}} database/emqx
          admin_password="{{.EMQX_ADMIN_PASSWORD}}"
          user_1_username="{{.EMQX_USER1_NAME}}"
          user_1_password="{{.EMQX_USER1_PASSWORD}}"
      # database/influxdb
      - vault kv put -mount=secret/{{.ENVIRONMENT}} database/influxdb
          influxdb-user="{{.INFLUXDB_USER}}"
          influxdb-password="{{.INFLUXDB_PASSWORD}}"
      # media/immich
      - vault kv put -mount=secret/{{.ENVIRONMENT}} media/immich
          IMMICH_JWT_SECRET="{{.IMMICH_JWT_SECRET}}"
          IMMICH_TYPESENSE_API_KEY="{{.IMMICH_TYPESENSE_API_KEY}}"
          IMMICH_POSTGRES_SUPER_USER="{{.IMMICH_POSTGRES_SUPER_USER}}"
          IMMICH_POSTGRES_SUPER_PASSWORD="{{.IMMICH_POSTGRES_SUPER_PASSWORD}}"
          IMMICH_POSTGRES_USER="{{.IMMICH_POSTGRES_USER}}"
          IMMICH_POSTGRES_PASSWORD="{{.IMMICH_POSTGRES_PASSWORD}}"
          IMMICH_DB_BACKUP_ACCESS_KEY="{{.IMMICH_DB_BACKUP_ACCESS_KEY}}"
          IMMICH_DB_BACKUP_SECRET="{{.IMMICH_DB_BACKUP_SECRET}}"
      # media/miniflux
      - vault kv put -mount=secret/{{.ENVIRONMENT}} media/miniflux
          MINIFLUX_ADMIN_USERNAME="{{.MINIFLUX_ADMIN_USERNAME}}"
          MINIFLUX_ADMIN_PASSWORD="{{.MINIFLUX_ADMIN_PASSWORD}}"
          MINIFLUX_POSTGRES_SUPER_USER="{{.MINIFLUX_POSTGRES_SUPER_USER}}"
          MINIFLUX_POSTGRES_SUPER_PASSWORD="{{.MINIFLUX_POSTGRES_SUPER_PASSWORD}}"
          MINIFLUX_POSTGRES_USER="{{.MINIFLUX_POSTGRES_USER}}"
          MINIFLUX_POSTGRES_PASSWORD="{{.MINIFLUX_POSTGRES_PASSWORD}}"
          MINIFLUX_DB_BACKUP_ACCESS_KEY="{{.MINIFLUX_DB_BACKUP_ACCESS_KEY}}"
          MINIFLUX_DB_BACKUP_SECRET="{{.MINIFLUX_DB_BACKUP_SECRET}}"
      # home-automation/home-assistant
      - vault kv put -mount=secret/{{.ENVIRONMENT}} home-automation/home-assistant
          HASS_POSTGRES_SUPER_USER="{{.HASS_POSTGRES_SUPER_USER}}"
          HASS_POSTGRES_SUPER_PASSWORD="{{.HASS_POSTGRES_SUPER_PASSWORD}}"
          HASS_POSTGRES_USER="{{.HASS_POSTGRES_USER}}"
          HASS_POSTGRES_PASSWORD="{{.HASS_POSTGRES_PASSWORD}}"
          HASS_DB_BACKUP_ACCESS_KEY="{{.HASS_DB_BACKUP_ACCESS_KEY}}"
          HASS_DB_BACKUP_SECRET="{{.HASS_DB_BACKUP_SECRET}}"
          ALARM_CODE="{{.HASS_ALARM_CODE}}"
          GIT_REPO="{{.HASS_GIT_REPO}}"
          DEPLOY_KEY_B64="{{.HASS_DEPLOY_KEY_B64}}"
          HACS_TOKEN="{{.HASS_HACS_TOKEN}}"
          LDAP_ROOT="{{.HASS_LDAP_ROOT}}"
          LOCAL_DOMAIN="{{.LOCAL_DOMAIN}}"
          LOCATION_LAT="{{.HASS_LOCATION_LAT}}"
          LOCATION_LONG="{{.HASS_LOCATION_LONG}}"
          DRAC_IP="{{.HASS_DRAC_IP}}"
      # home-automation/frigate
      - vault kv put -mount=secret/{{.ENVIRONMENT}} home-automation/frigate
          DVR_URL="{{.FRIGATE_DVR_URL}}"
          CAM1_NAME="{{.FRIGATE_CAM1_NAME}}"
          CAM1_ID="{{.FRIGATE_CAM1_ID}}"
          CAM2_NAME="{{.FRIGATE_CAM2_NAME}}"
          CAM2_ID="{{.FRIGATE_CAM2_ID}}"
          CAM3_NAME="{{.FRIGATE_CAM3_NAME}}"
          CAM3_ID="{{.FRIGATE_CAM3_ID}}"
          CAM4_NAME="{{.FRIGATE_CAM4_NAME}}"
          CAM4_ID="{{.FRIGATE_CAM4_ID}}"
          CAM5_NAME="{{.FRIGATE_CAM5_NAME}}"
          CAM5_ID="{{.FRIGATE_CAM5_ID}}"
          CAM6_NAME="{{.FRIGATE_CAM6_NAME}}"
          CAM6_ID="{{.FRIGATE_CAM6_ID}}"
          CAM7_NAME="{{.FRIGATE_CAM7_NAME}}"
          CAM7_ID="{{.FRIGATE_CAM7_ID}}"
          CAM8_NAME="{{.FRIGATE_CAM8_NAME}}"
          CAM8_ID="{{.FRIGATE_CAM8_ID}}"
          PLUS_API_KEY="{{.FRIGATE_PLUS_API_KEY}}"
      # home-automation/rtlamr-collect
      - vault kv put -mount=secret/{{.ENVIRONMENT}} home-automation/rtlamr-collect
          RTLAMR_METERS="{{.RTLAMR_METERS}}"
          RTLAMR_MSGTYPE="{{.RTLAMR_MSGTYPE}}"
      # home-automation/tidbyt-proxy
      - vault kv put -mount=secret/{{.ENVIRONMENT}} home-automation/tidbyt-proxy
          TIDBYT_API_KEY="{{.TIDBYT_API_KEY}}"
          TIDBYT_DEVICE_ID="{{.TIDBYT_DEVICE_ID}}"
      # home-automation/unifi-downloader
      - vault kv put -mount=secret/{{.ENVIRONMENT}} home-automation/unifi-downloader
          UNIFI_DOWNLOADER_HOST="{{.UNIFI_DOWNLOADER_HOST}}"
          UNIFI_DOWNLOADER_USERNAME="{{.UNIFI_DOWNLOADER_USERNAME}}"
          UNIFI_DOWNLOADER_PASSWORD="{{.UNIFI_DOWNLOADER_PASSWORD}}"
      # monitoring/gatus
      - vault kv put -mount=secret/{{.ENVIRONMENT}} monitoring/gatus
          GATUS_POSTGRES_SUPER_USER="{{.GATUS_POSTGRES_SUPER_USER}}"
          GATUS_POSTGRES_SUPER_PASSWORD="{{.GATUS_POSTGRES_SUPER_PASSWORD}}"
          GATUS_POSTGRES_USER="{{.GATUS_POSTGRES_USER}}"
          GATUS_POSTGRES_PASSWORD="{{.GATUS_POSTGRES_PASSWORD}}"
          GATUS_DB_BACKUP_ACCESS_KEY="{{.GATUS_DB_BACKUP_ACCESS_KEY}}"
          GATUS_DB_BACKUP_SECRET="{{.GATUS_DB_BACKUP_SECRET}}"
          GATUS_SLACK_WEBHOOK_URL="{{.SLACK_WEBHOOK}}"
          GATUS_DOMAIN="{{.GATUS_DOMAIN}}"
      # monitoring/grafana
      - vault kv put -mount=secret/{{.ENVIRONMENT}} monitoring/grafana
          ADMIN_USER="{{.GRAFANA_ADMIN_USER}}"
          ADMIN_PASSWORD="{{.GRAFANA_ADMIN_PASSWORD}}"
          LDAP_SERVER="{{.GRAFANA_LDAP_SERVER}}"
          LDAP_USERNAME="{{.GRAFANA_LDAP_USERNAME}}"
          LDAP_PASSWORD="{{.GRAFANA_LDAP_PASSWORD}}"
          LDAP_ROOT="{{.GRAFANA_LDAP_ROOT}}"
      # security/authelia
      - vault kv put -mount=secret/{{.ENVIRONMENT}} security/authelia
          AUTHELIA_POSTGRES_SUPER_USER="{{.AUTHELIA_POSTGRES_SUPER_USER}}"
          AUTHELIA_POSTGRES_SUPER_PASSWORD="{{.AUTHELIA_POSTGRES_SUPER_PASSWORD}}"
          AUTHELIA_POSTGRES_USER="{{.AUTHELIA_POSTGRES_USER}}"
          AUTHELIA_POSTGRES_PASSWORD="{{.AUTHELIA_POSTGRES_PASSWORD}}"
          AUTHELIA_DB_BACKUP_ACCESS_KEY="{{.AUTHELIA_DB_BACKUP_ACCESS_KEY}}"
          AUTHELIA_DB_BACKUP_SECRET="{{.AUTHELIA_DB_BACKUP_SECRET}}"
          AUTHELIA_IDENTITY_PROVIDERS_OIDC_HMAC_SECRET="{{.AUTHELIA_IDENTITY_PROVIDERS_OIDC_HMAC_SECRET}}"
          AUTHELIA_IDENTITY_PROVIDERS_OIDC_ISSUER_PRIVATE_KEY="{{.AUTHELIA_IDENTITY_PROVIDERS_OIDC_ISSUER_PRIVATE_KEY}}"
          AUTHELIA_JWT_SECRET="{{.AUTHELIA_JWT_SECRET}}"
          AUTHELIA_SESSION_SECRET="{{.AUTHELIA_SESSION_SECRET}}"
          AUTHELIA_STORAGE_ENCRYPTION_KEY="{{.AUTHELIA_STORAGE_ENCRYPTION_KEY}}"
          DOMAIN="{{.DOMAIN}}"
          GRAFANA_OAUTH_CLIENT_SECRET="{{.GRAFANA_OAUTH_CLIENT_SECRET}}"
          IMMICH_OAUTH_CLIENT_SECRET="{{.IMMICH_OAUTH_CLIENT_SECRET}}"
          MINIFLUX_OAUTH_CLIENT_SECRET="{{.MINIFLUX_OAUTH_CLIENT_SECRET}}"
          WEAVEGITOPS_OAUTH_CLIENT_SECRET="{{.WEAVEGITOPS_OAUTH_CLIENT_SECRET}}"
      # security/lldap
      - vault kv put -mount=secret/{{.ENVIRONMENT}} security/lldap
          LLDAP_POSTGRES_SUPER_USER="{{.LLDAP_POSTGRES_SUPER_USER}}"
          LLDAP_POSTGRES_SUPER_PASSWORD="{{.LLDAP_POSTGRES_SUPER_PASSWORD}}"
          LLDAP_POSTGRES_USER="{{.LLDAP_POSTGRES_USER}}"
          LLDAP_POSTGRES_PASSWORD="{{.LLDAP_POSTGRES_PASSWORD}}"
          LLDAP_DB_BACKUP_ACCESS_KEY="{{.LLDAP_DB_BACKUP_ACCESS_KEY}}"
          LLDAP_DB_BACKUP_SECRET="{{.LLDAP_DB_BACKUP_SECRET}}"
          LLDAP_JWT_SECRET="{{.LLDAP_JWT_SECRET}}"
          LLDAP_USER_DN="{{.LLDAP_USER_DN}}"
          LLDAP_USER_PASSWORD="{{.LLDAP_USER_PASSWORD}}"
          LLDAP_LDAP_USER_EMAIL="{{.LLDAP_LDAP_USER_EMAIL}}"
          LLDAP_SERVER_KEY_SEED="{{.LLDAP_SERVER_KEY_SEED}}"
          LLDAP_LDAP_BASE_DN="{{.LLDAP_LDAP_BASE_DN}}"
      # volsync
      - vault kv put -mount=secret/{{.ENVIRONMENT}} volsync/volsync
          RESTIC_URL="{{.RESTIC_URL}}"
      - vault kv put -mount=secret/{{.ENVIRONMENT}} volsync/esphome
          RESTIC_ESPHOME_PASSWORD="{{.RESTIC_ESPHOME_PASSWORD}}"
      - vault kv put -mount=secret/{{.ENVIRONMENT}} volsync/frigate
          RESTIC_FRIGATE_PASSWORD="{{.RESTIC_FRIGATE_PASSWORD}}"
      - vault kv put -mount=secret/{{.ENVIRONMENT}} volsync/immich
          RESTIC_IMMICH_PASSWORD="{{.RESTIC_IMMICH_PASSWORD}}"
      - vault kv put -mount=secret/{{.ENVIRONMENT}} volsync/home-assistant
          RESTIC_HASS_PASSWORD="{{.RESTIC_HASS_PASSWORD}}"
      - vault kv put -mount=secret/{{.ENVIRONMENT}} volsync/zwavejs
          RESTIC_ZWAVEJS_PASSWORD="{{.RESTIC_ZWAVEJS_PASSWORD}}"

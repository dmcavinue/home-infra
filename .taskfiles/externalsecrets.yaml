---
version: "3"

tasks:

  store-sync:
    desc: Sync ExternalSecret secretstore resources
    vars:
      secret: '{{ .secret | default ""}}'
      namespace: '{{.namespace | default "default"}}'
    cmd: |
      {{if eq .secret ""}}
        kubectl --context {{.ENVIRONMENT}} get secretstore.external-secrets.io --all-namespaces --no-headers -A | awk '{print $1, $2}' \
          | xargs -n 2 -P 4 bash -c 'kubectl --context {{.ENVIRONMENT}} -n $0 annotate secretstore.external-secrets.io $1 force-sync=$(date +%s) --overwrite'
      {{else}}
        kubectl --context {{.ENVIRONMENT}} -n {{.namespace}} annotate secretstore.external-secrets.io {{.secret}} force-sync=$(date +%s) --overwrite
      {{end}}
    preconditions:
      - kubectl --context {{.ENVIRONMENT}} -n {{.namespace}} get secretstore {{.secret}}

  sync:
    desc: Sync ExternalSecret resources
    vars:
      secret: '{{ .secret | default ""}}'
      namespace: '{{.namespace | default "default"}}'
    cmd: |
      {{if eq .secret ""}}
        kubectl --context {{.ENVIRONMENT}} get externalsecret.external-secrets.io --all-namespaces --no-headers -A | awk '{print $1, $2}' \
          | xargs -n 2 -P 4 bash -c 'kubectl --context {{.ENVIRONMENT}} -n $0 annotate externalsecret.external-secrets.io $1 force-sync=$(date +%s) --overwrite'
      {{else}}
        kubectl --context {{.ENVIRONMENT}} -n {{.namespace}} annotate externalsecret.external-secrets.io {{.secret}} force-sync=$(date +%s) --overwrite
      {{end}}
    preconditions:
      - kubectl --context {{.ENVIRONMENT}} -n {{.namespace}} get externalsecret {{.secret}}

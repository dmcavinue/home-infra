---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home-automation
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync
  values:
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2024.12.4@sha256:7f197de44d6216db872b167d1bb090dcc1af040e165da1759d87500bfe234aaf
            args: [
              "--log-file", "/config/logs/home-assistant.log"
            ]
            env:
              TZ: America/New_York
            envFrom:
              - secretRef:
                  name: home-assistant-secret
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 300m
                memory: 1Gi
              limits:
                memory: 2Gi
          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.96.1@sha256:2dbf436d68564dfda13b4d4eeb8324704b6b4120f25ca57feaf230228c3d70da
            args: [
              "--auth", "none",
              "--user-data-dir", "/config/.vscode",
              "--extensions-dir", "/config/.vscode",
              "--port", "12321",
              "/config"
            ]
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
        pod:
          labels:
            egress.home.arpa/lan-iot: allow
            egress.home.arpa/lan-user: allow
            egress.home.arpa/lan-mgmt: allow
            egress.home.arpa/world: allow
            egress.home.arpa/unifi: allow
            egress.home.arpa/mqtt: allow
            prom.home.arpa/prometheus: allow
            ingress.home.arpa/nginx: allow
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name":"multus-iot",
                "namespace": "kube-system",
                "mac": "e2:c5:0c:83:20:31",
                "ips": ["192.168.4.240/24"]
              }]
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: home-assistant
        ports:
          http:
            port: &port 8123
          code-server:
            port: 12321
    ingress:
      app:
        className: nginx
        hosts:
          - host: &host hass.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: *port
      code-server:
        annotations:
          nginx.ingress.kubernetes.io/auth-url: https://oauth.nucstack.com/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: https://oauth.nucstack.com/oauth2/start
        className: nginx
        hosts:
          - host: hass-code.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: code-server
    serviceAccount:
      create: true
      name: hass
    persistence:
      config:
        existingClaim: home-assistant
        globalMounts:
          - path: /config
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
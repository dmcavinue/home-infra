apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: default
  namespace: media
spec:
  endpointSelector: {}
  ingress:
    - fromEndpoints:
        - {}
    - fromEndpoints:
        - matchLabels:
            k8s:app.kubernetes.io/instance: immich-microservices
            k8s:app.kubernetes.io/name: immich-microservices
            k8s:io.kubernetes.pod.namespace: media
      authentication:
        mode: required
      toPorts:
        - ports:
            - port: "8108"
    - fromEndpoints:
        - matchLabels:
            k8s:app.kubernetes.io/instance: immich-microservices
            k8s:app.kubernetes.io/name: immich-microservices
            k8s:io.kubernetes.pod.namespace: media
      authentication:
        mode: required
      toPorts:
        - ports:
            - port: "5432"
    - fromEndpoints:
        - matchLabels:
            k8s:app.kubernetes.io/instance: immich-server
            k8s:app.kubernetes.io/name: immich-server
            k8s:io.kubernetes.pod.namespace: media
      authentication:
        mode: required
      toPorts:
        - ports:
            - port: "8108"
    - fromEndpoints:
        - matchLabels:
            k8s:app.kubernetes.io/component: controller
            k8s:app.kubernetes.io/instance: nginx
            k8s:app.kubernetes.io/name: ingress-nginx
            k8s:io.kubernetes.pod.namespace: ingress
      authentication:
        mode: required
      toPorts:
        - ports:
            - port: "3001"
    - fromEndpoints:
        - matchLabels:
            k8s:app.kubernetes.io/instance: victoria-metrics
            k8s:app.kubernetes.io/name: vmagent
            k8s:io.kubernetes.pod.namespace: monitoring
      authentication:
        mode: required
      toPorts:
        - ports:
            - port: "9187"
    - fromEndpoints:
        - matchLabels:
            k8s:app.kubernetes.io/instance: immich-server
            k8s:app.kubernetes.io/name: immich-server
            k8s:io.kubernetes.pod.namespace: media
      authentication:
        mode: required
      toPorts:
        - ports:
            - port: "5432"
    - fromEndpoints:
        - matchLabels:
            k8s:app.kubernetes.io/instance: cloudnative-pg
            k8s:app.kubernetes.io/name: cloudnative-pg
            k8s:io.kubernetes.pod.namespace: database
      authentication:
        mode: required
      toPorts:
        - ports:
            - port: "8000"
  egress:
    # dns
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      authentication:
        mode: required
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
    - toEndpoints:
        - {}
    # allow to all k8s cluster ipam ranges
    - toCIDRSet:
        - cidr: 192.168.8.48/28
        - cidr: 192.168.8.16/28
        - cidr: 192.168.8.240/28
      toPorts:
        - ports:
            - port: "443"
    - toEndpoints:
        - matchLabels:
            k8s:app.kubernetes.io/instance: redis
            k8s:app.kubernetes.io/name: redis
            k8s:io.kubernetes.pod.namespace: database
      toPorts:
        - ports:
            - port: "6379"
    - toEndpoints:
        - matchLabels:
            k8s:app.kubernetes.io/instance: immich-machine-learning
            k8s:app.kubernetes.io/name: immich-machine-learning
            k8s:io.kubernetes.pod.namespace: media
      authentication:
        mode: required
      toPorts:
        - ports:
            - port: "3003"
    - toEndpoints:
        - matchLabels:
            k8s:cnpg.io/cluster: immich
            k8s:io.kubernetes.pod.namespace: media
      authentication:
        mode: required
      toPorts:
        - ports:
            - port: "5432"
    - toEndpoints:
        - matchLabels:
            k8s:cnpg.io/cluster: immich
            k8s:io.kubernetes.pod.namespace: media
      authentication:
        mode: required
      toPorts:
        - ports:
            - port: "5432"
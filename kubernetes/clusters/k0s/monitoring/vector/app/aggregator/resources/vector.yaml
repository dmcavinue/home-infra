---
data_dir: /vector-data-dir
api:
  enabled: true
  address: 0.0.0.0:8686

#
# Sources
#

sources:
  journald_source:
    type: vector
    version: "2"
    address: 0.0.0.0:6000

  kubernetes_source:
    type: vector
    version: "2"
    address: 0.0.0.0:6010

  unifi_source:
    type: vector
    version: "2"
    address: 0.0.0.0:6020

#
# Transforms
#

transforms:
  kubernetes_remap:
    type: remap
    inputs: ["kubernetes_source"]
    source: |
      # Standardize 'app' index
      .custom_app_name = .pod_labels."app.kubernetes.io/name" || .pod_labels.app || .pod_labels."k8s-app" || "unknown"
      # Drop pod_labels
      del(.pod_labels)


  # Dec 18 20:38:16 udm-pro [LAN_IN-D-40122] DESCR=\"deny-vlan-to-vlan\" IN=br70 OUT=br50 MAC=74:83:c2:7f:df:c1:bc:d0:74:22:34:d3:08:00 SRC=192.168.7.122 DST=192.168.5.43 LEN=64 TOS=00 PREC=0x00 TTL=63 ID=0 DF PROTO=TCP SPT=62340 DPT=8009 SEQ=836450930 ACK=0 WINDOW=65535 SYN URGP=0 MARK=1a0000
  unifi_firewall_route:
    type: route
    inputs: ["unifi_source"]
    route:
      firewall: |
        .file == "/logs/udm/ulog/syslogemu.log" && match!(.message, r'^[a-zA-Z0-9 :-]+\[(.*?)\].(.*)')

  unifi_firewall_remap:
    type: remap
    inputs: ["unifi_firewall_route.firewall"]
    source: |
      # Parse firewall rule message
      split_message, split_err = parse_regex(.message, r'^[a-zA-Z0-9 :-]+\[(?P<RULE>.*?)\](?P<fields>.*)')
      if split_err != null {
          abort
      }
      # Extract separate fields from message
      split_message.fields, split_err = strip_whitespace(split_message.fields)
      if split_err != null {
          abort
      }
      .message, parse_err = parse_key_value(split_message.fields, whitespace: "strict")
      if parse_err != null {
          abort
      }

#
# Sinks
#

sinks:
  journald:
    inputs: ["journald_source"]
    type: loki
    endpoint: http://loki-gateway.monitoring.svc.cluster.local
    encoding: { codec: json }
    out_of_order_action: accept
    remove_label_fields: true
    remove_timestamp: true
    labels:
      hostname: '{{ host }}'

  kubernetes:
    inputs: ["kubernetes_remap"]
    type: loki
    endpoint: http://loki-gateway.monitoring.svc.cluster.local
    encoding: { codec: json }
    out_of_order_action: accept
    remove_label_fields: true
    remove_timestamp: true
    labels:
      app: '{{ custom_app_name }}'
      namespace: '{{ kubernetes.pod_namespace }}'
      node: '{{ kubernetes.pod_node_name }}'

  unifi:
    inputs: ["unifi_firewall_remap"]
    type: loki
    endpoint: http://loki-gateway.monitoring.svc.cluster.local
    encoding: { codec: json }
    out_of_order_action: accept
    remove_label_fields: false
    remove_timestamp: true
    labels:
      app: 'unifi-firewall'

---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: cilium
  namespace: kube-system
spec:
  interval: 30m
  chart:
    spec:
      chart: cilium
      version: 1.15.4
      sourceRef:
        kind: HelmRepository
        name: cilium
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    bandwidthManager:
      enabled: true
      bbr: true
    cni:
      exclusive: false
    resources:
      limits:
        memory: 768Mi
      requests:
        cpu: 200m
        memory: 512Mi
    initResources:
      limits:
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi
    authentication:
      mutual:
        spire:
          enabled: true
          install:
            enabled: true
            agent:
              enabled: true
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: false
                capabilities:
                  drop: ["ALL"]
            server:
              enabled: true
              dataStorage:
                size: 1Gi
                accessMode: ReadWriteOnce
                storageClass: local-path
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop: ["ALL"]
              resources:
                limits:
                  memory: 256Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
    bpf:
      masquerade: true
    cgroup:
      automount:
        enabled: false
      hostRoot: /sys/fs/cgroup
    bgp:
      enabled: false
    cluster:
      name: "${ENVIRONMENT}"
      id: "${CILIUM_ID}"
    clustermesh:
      useAPIServer: true
      config:
        enabled: true
        clusters:
        - name: main
          address: main.mesh.cilium.io
          port: 2379
      apiserver:
        tls:
          auto:
            method: certmanager
            certManagerIssuerRef:
              group: cert-manager.io
              kind: Issuer
              name: vault-issuer
        etcd:
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          init:
            resources:
              limits:
                memory: 512Mi
              requests:
                cpu: 200m
                memory: 256Mi
        kvstoremesh:
          enabled: true
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
        service:
          type: LoadBalancer
          loadBalancerIP: "${CILIUM_MESH_LB_IP}"
        resources:
          limits:
            memory: 384Mi
          requests:
            cpu: 50m
            memory: 256Mi
    containerRuntime:
      integration: containerd
      socketPath: /var/run/k3s/containerd/containerd.sock
    enable-ipv4-masquerade: true
    #devices: eth0
    enableRuntimeDeviceDetection: true
    endpointRoutes:
      enabled: true
    endpointStatus:
      enabled: true
      status: "policy"
    gatewayAPI:
      enabled: false
      secretsNamespace:
        create: false
        name: ingress
        sync: false
    encryption:
      enabled: true
      type: wireguard
      nodeEncryption: false
      # strictMode:
      #   enabled: false
      #   cidr: ""
      #   allowRemoteNodeIdentities: false
      # wireguard:
      #   userspaceFallback: false
      #   persistentKeepalive: 0s
    extraVolumes:
    - name: hubble-exporter
      emptyDir: {}
    extraVolumeMounts:
    - name: hubble-exporter
      mountPath: /var/log/hubble-flows
    extraContainers:
    - name: hubble-exporter
      image: alpine:3
      imagePullPolicy: IfNotPresent
      command: [ "/bin/sh", "-c", "--" ]
      args:
      - "while [ ! -f /var/log/hubble-flows/flow.log ]; do sleep 5; done; tail -n+1 -F /var/log/hubble-flows/flow.log"
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      volumeMounts:
      - name: hubble-exporter
        mountPath: /var/log/hubble-flows
    hubble:
      enabled: true
      export:
        enabled: true
        fileMaxSizeMb: 1
        fileMaxBackups: 1
        static:
          enabled: true
          filePath: /var/log/hubble-flows/flow.log
          fieldMask:
          - time
          - verdict
          - source
          - destination
          - traffic_direction
          - IP
          denyList:
          - '{"verdict":["FORWARDED","TRACED"]}'
      tls:
        auto:
          method: certmanager
          certManagerIssuerRef:
            group: cert-manager.io
            kind: Issuer
            name: vault-issuer
      metrics:
        enabled:
          - "httpV2:sourceContext=workload-name|pod-name|reserved-identity;destinationContext=workload-name|pod-name|reserved-identity;labelsContext=source_namespace,destination_namespace,traffic_direction"
          - "kafka:sourceContext=workload-name|pod-name|reserved-identity;destinationContext=workload-name|pod-name|reserved-identity;labelsContext=source_namespace,destination_namespace,traffic_direction"
        enableOpenMetrics: true
        serviceMonitor:
          enabled: true
        dashboards:
          enabled: true
          namespace: monitoring
      relay:
        enabled: true
        rollOutPods: true
        prometheus:
          serviceMonitor:
            enabled: true
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
      ui:
        enabled: true
        rollOutPods: true
        ingress:
          enabled: true
          className: nginx
          hosts:
            - &host "hubble.${DOMAIN}"
          tls:
            - hosts:
                - *host
          annotations:
            # nginx.ingress.kubernetes.io/auth-url: https://oauth.${DOMAIN}/oauth2/auth
            # nginx.ingress.kubernetes.io/auth-signin: https://oauth.${DOMAIN}/oauth2/start
    ipam:
      mode: kubernetes
    ipv4NativeRoutingCIDR: 10.0.0.0/8
    k8sServiceHost: "${K8S_SERVICE_HOST}"
    k8sServicePort: 443
    kubeProxyReplacement: strict
    kubeProxyReplacementHealthzBindAddr: 0.0.0.0:10256
    l2announcements:
      enabled: true
      leaseDuration: 120s
      leaseRenewDeadline: 60s
      leaseRetryPeriod: 1s
    loadBalancer:
      algorithm: maglev
      serviceTopology: true
      mode: snat
    localRedirectPolicy: true
    operator:
      replicas: 1
      rollOutPods: true
      prometheus:
        enabled: true
        serviceMonitor:
          enabled: true
      dashboards:
        enabled: true
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 256Mi
    prometheus:
      enabled: true
      serviceMonitor:
        enabled: true
    dashboards:
      enabled: true
    rollOutCiliumPods: true
    policyAuditMode: true
    securityContext:
      capabilities:
        ciliumAgent:
          - CHOWN
          - KILL
          - NET_ADMIN
          - NET_RAW
          - IPC_LOCK
          - SYS_ADMIN
          - SYS_RESOURCE
          - DAC_OVERRIDE
          - FOWNER
          - SETGID
          - SETUID
        cleanCiliumState:
          - NET_ADMIN
          - SYS_ADMIN
          - SYS_RESOURCE
    routingMode: tunnel
    tunnelProtocol: vxlan
    tunnelPort: 8472
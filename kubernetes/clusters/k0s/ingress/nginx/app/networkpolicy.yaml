---
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: allow-ingress-nginx
spec:
  description: "Allow pods that require ingress to allow traffic from ingress-nginx, no port restrictions"
  endpointSelector:
    matchLabels:
      ingress.home.arpa/nginx: allow
  ingress:
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/name: ingress-nginx
            app.kubernetes.io/component: controller
            io.kubernetes.pod.namespace: ingress
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: ingress-nginx
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/component: controller
  egress:
    # grafana
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: grafana
      toPorts:
        - ports:
            - port: "3000"
              protocol: TCP
    # hubble
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: hubble-ui
      toPorts:
        - ports:
            - port: "8081"
              protocol: TCP
    # minio
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: minio
            app.kubernetes.io/component: minio
      toPorts:
        - ports:
            - port: "9000"
              protocol: TCP
            - port: "9001"
              protocol: TCP
    # vault
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: vault
            app.kubernetes.io/component: server
      toPorts:
        - ports:
            - port: "8200"
              protocol: TCP
    # adguard
    - toCIDRSet:
        - cidr: "${INGRESS_ADGUARD_IP}/32"
      toPorts:
        - ports:
            - port: "3000"
              protocol: TCP
    # drac
    - toCIDRSet:
        - cidr: "${INGRESS_DRAC_IP}/32"
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
    # proxmox
    - toCIDRSet:
        - cidr: "${INGRESS_PROXMOX_IP}/32"
      toPorts:
        - ports:
            - port: "8002"
              protocol: TCP
    # unifi
    - toCIDRSet:
        - cidr: "${INGRESS_UNIFI_IP}/32"
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
    # vacuum
    - toCIDRSet:
        - cidr: "${INGRESS_VACUUM_IP}/32"
      toPorts:
        - ports:
            - port: "80"
              protocol: TCP

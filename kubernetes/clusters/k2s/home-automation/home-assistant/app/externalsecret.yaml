---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: home-assistant
  namespace: home-automation
spec:
  refreshInterval: "30m"
  secretStoreRef:
    name: vault-kv-backend
    kind: SecretStore
  target:
    name: home-assistant-secret
    template:
      engineVersion: v2
      data:
        # App
        alarm_code: "{{ .HASS_ALARM_CODE }}"
        hacs_token: "{{ .HASS_HACS_TOKEN }}"
        location_lat: "{{ .HASS_LOCATION_LAT }}"
        location_long: "{{ .HASS_LOCATION_LONG }}"
        db_url: "postgresql://{{ .HASS_POSTGRES_USER }}:{{ .HASS_POSTGRES_PASSWORD }}@home-assistant-rw.home-automation.svc.cluster.local/home_assistant"
        drac_ip: "{{ .HASS_DRAC_IP }}"
  dataFrom:
    - extract:
        key: /home-automation/home-assistant
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: home-assistant-auth
  namespace: home-automation
spec:
  refreshInterval: "30m"
  secretStoreRef:
    name: vault-kv-backend
    kind: SecretStore
  target:
    name: home-assistant-auth
    template:
      type: opaque
      data:
        home-assistant.cfg: |
          CLIENT="ldapsearch"
          DEBUG=0
          USERNAME_PATTERN='^[a-z|A-Z|0-9|_|-|.]+$'
          SERVER="ldap://lldap.logfold.com"
          USERDN="uid=$(ldap_dn_escape "$username"),ou=people,{{ .HASS_LDAP_ROOT }}"
          BASEDN="$USERDN"
          SCOPE="base"
          FILTER="(&(uid=$(ldap_dn_escape "$username"))(memberOf=cn=home-assistant,ou=groups,{{ .HASS_LDAP_ROOT }}))"
          ATTRS="uid"
          TIMEOUT=3

          NAME_ATTR="title"
          ATTRS="$ATTRS $NAME_ATTR"

          on_auth_success() {
            # print the meta entries for use in HA
            if [ ! -z "$NAME_ATTR" ]; then
              name=$(echo "$output" | sed -nr "s/^\s*$NAME_ATTR:\s*(.+)\s*\$/\1/Ip")
              [ -z "$name" ] || echo "name=$name"
            fi
          }
  dataFrom:
    - extract:
        key: /home-automation/home-assistant

